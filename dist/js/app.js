"use strict";function AppCtrl(e,o,n,t){e.menuItemClass="menu-item",e.menuClass="menu",e.onMenuPress=function(o){e.menuClicked=!o,e.message="in method"+e.menuClicked,e.menuItemClass="menu-item",e.menuClicked?(e.menuClass="menu-mobile",e.menuItemClass="menu-item-mobile",e.menuButtonClass="menu-button-mobile"):(e.menuClass="menu",e.menuButtonClass="menu-button"),console.log("in menu press")}}function HomeCtrl(e,o,n,t){e.data={name:"",email:"",checkin:"",checkout:"",room:["Single","Double","Family","Suite"],adults:[1,2,3,4],kids:[1,2,3,4]},e.bookNow=function(){console.log("in book now")}}function HnrCtrl(e,o,n,t){e.doSomething=function(){console.log("in something")}}angular.module("myApp",["ngRoute","myApp.home","myApp.hnr","myApp.view2"]).config(["$locationProvider","$routeProvider",function(e,o){o.when("/home",{templateUrl:"home/home.html",controller:"HomeCtrl"}).when("/view2",{templateUrl:"view2/view2.html",controller:"View2Ctrl"}).when("/hnr",{templateUrl:"hnr/hnr.html",controller:"HnrCtrl"}).otherwise({redirectTo:"/home"})}]).controller("AppCtrl",AppCtrl),AppCtrl.$inject=["$scope","$rootScope","$document","$window"],angular.module("myApp.home",["ngRoute"]).config(["$routeProvider",function(e){e.when("/home",{templateUrl:"home/home.html",controller:"HomeCtrl"})}]).controller("HomeCtrl",HomeCtrl),HomeCtrl.$inject=["$scope","$rootScope","$document","$window"],angular.module("myApp.hnr",["ngRoute"]).config(["$routeProvider",function(e){e.when("/hnr",{templateUrl:"hnr/hnr.html",controller:"HnrCtrl"})}]).controller("HnrCtrl",HnrCtrl),HnrCtrl.$inject=["$scope","$rootScope","$document","$window"],angular.module("myApp.view2",["ngRoute"]).config(["$routeProvider",function(e){e.when("/view2",{templateUrl:"view2/hnr.html",controller:"View2Ctrl"})}]).controller("View2Ctrl",View2Ctrl);var View2Ctrl=function(){};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImhvbWUuanMiLCJobnIuanMiLCJ2aWV3Mi5qcyJdLCJuYW1lcyI6WyJBcHBDdHJsIiwiJHNjb3BlIiwiJHJvb3RTY29wZSIsIiRkb2N1bWVudCIsIiR3aW5kb3ciLCJtZW51SXRlbUNsYXNzIiwibWVudUNsYXNzIiwib25NZW51UHJlc3MiLCJtZW51Q2xpY2tlZCIsIm1lc3NhZ2UiLCJtZW51QnV0dG9uQ2xhc3MiLCJjb25zb2xlIiwibG9nIiwiSG9tZUN0cmwiLCJkYXRhIiwibmFtZSIsImVtYWlsIiwiY2hlY2tpbiIsImNoZWNrb3V0Iiwicm9vbSIsImFkdWx0cyIsImtpZHMiLCJib29rTm93IiwiSG5yQ3RybCIsImRvU29tZXRoaW5nIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRsb2NhdGlvblByb3ZpZGVyIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwib3RoZXJ3aXNlIiwicmVkaXJlY3RUbyIsIiRpbmplY3QiLCJWaWV3MkN0cmwiXSwibWFwcGluZ3MiOiJBQUNBLGFBNkJBLFNBQUFBLFFBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEdBRUFILEVBQUFJLGNBQUEsWUFDQUosRUFBQUssVUFBQSxPQUVBTCxFQUFBTSxZQUFBLFNBQUFDLEdBQ0FQLEVBQUFPLGFBQUFBLEVBQ0FQLEVBQUFRLFFBQUEsWUFBQVIsRUFBQU8sWUFDQVAsRUFBQUksY0FBQSxZQUVBSixFQUFBTyxhQUNBUCxFQUFBSyxVQUFBLGNBQ0FMLEVBQUFJLGNBQUEsbUJBQ0FKLEVBQUFTLGdCQUFBLHVCQUVBVCxFQUFBSyxVQUFBLE9BQ0FMLEVBQUFTLGdCQUFBLGVBR0FDLFFBQUFDLElBQUEsa0JDckNBLFNBQUFDLFNBQUFaLEVBQUFDLEVBQUFDLEVBQUFDLEdBRUFILEVBQUFhLE1BQ0FDLEtBQUEsR0FDQUMsTUFBQSxHQUNBQyxRQUFBLEdBQ0FDLFNBQUEsR0FDQUMsTUFBQSxTQUFBLFNBQUEsU0FBQSxTQUNBQyxRQUFBLEVBQUEsRUFBQSxFQUFBLEdBQ0FDLE1BQUEsRUFBQSxFQUFBLEVBQUEsSUFFQXBCLEVBQUFxQixRQUFBLFdBQ0FYLFFBQUFDLElBQUEsZ0JDWEEsU0FBQVcsUUFBQXRCLEVBQUFDLEVBQUFDLEVBQUFDLEdBQ0FILEVBQUF1QixZQUFBLFdBQ0FiLFFBQUFDLElBQUEsaUJGWEFhLFFBQUFDLE9BQUEsU0FDQSxVQUNBLGFBQ0EsWUFDQSxnQkFFQUMsUUFBQSxvQkFBQSxpQkFBQSxTQUFBQyxFQUFBQyxHQUdBQSxFQUNBQyxLQUFBLFNBQ0FDLFlBQUEsaUJBQ0FDLFdBQUEsYUFFQUYsS0FBQSxVQUNBQyxZQUFBLG1CQUNBQyxXQUFBLGNBRUFGLEtBQUEsUUFDQUMsWUFBQSxlQUNBQyxXQUFBLFlBRUFDLFdBQUFDLFdBQUEsYUFFQUYsV0FBQSxVQUFBaEMsU0FDQUEsUUFBQW1DLFNBQUEsU0FBQSxhQUFBLFlBQUEsV0MxQkFWLFFBQUFDLE9BQUEsY0FBQSxZQUNBQyxRQUFBLGlCQUFBLFNBQUFFLEdBQ0FBLEVBQUFDLEtBQUEsU0FDQUMsWUFBQSxpQkFDQUMsV0FBQSxnQkFHQUEsV0FBQSxXQUFBbkIsVUFDQUEsU0FBQXNCLFNBQUEsU0FBQSxhQUFBLFlBQUEsV0NUQVYsUUFBQUMsT0FBQSxhQUFBLFlBRUFDLFFBQUEsaUJBQUEsU0FBQUUsR0FDQUEsRUFBQUMsS0FBQSxRQUNBQyxZQUFBLGVBQ0FDLFdBQUEsZUFJQUEsV0FBQSxVQUFBVCxTQUNBQSxRQUFBWSxTQUFBLFNBQUEsYUFBQSxZQUFBLFdDVkFWLFFBQUFDLE9BQUEsZUFBQSxZQUVBQyxRQUFBLGlCQUFBLFNBQUFFLEdBQ0FBLEVBQUFDLEtBQUEsVUFDQUMsWUFBQSxpQkFDQUMsV0FBQSxpQkFJQUEsV0FBQSxZQUFBSSxXQUNBLElBQUFBLFVBQUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4ndXNlIHN0cmljdCc7XG5cbi8vIERlY2xhcmUgYXBwIGxldmVsIG1vZHVsZSB3aGljaCBkZXBlbmRzIG9uIHZpZXdzLCBhbmQgY29tcG9uZW50c1xuYW5ndWxhci5tb2R1bGUoJ215QXBwJywgW1xuICAnbmdSb3V0ZScsXG4gICdteUFwcC5ob21lJyxcbiAgICAnbXlBcHAuaG5yJyxcbiAgJ215QXBwLnZpZXcyJ1xuXSkuXG5jb25maWcoWyckbG9jYXRpb25Qcm92aWRlcicsICckcm91dGVQcm92aWRlcicsIGZ1bmN0aW9uKCRsb2NhdGlvblByb3ZpZGVyLCAkcm91dGVQcm92aWRlcikge1xuICAvLyRsb2NhdGlvblByb3ZpZGVyLmhhc2hQcmVmaXgoJyEnKTtcblxuICAkcm91dGVQcm92aWRlclxuICAgICAgLndoZW4oJy9ob21lJywge1xuICAgICAgICAgIHRlbXBsYXRlVXJsOiAnaG9tZS9ob21lLmh0bWwnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdIb21lQ3RybCdcbiAgICAgIH0pXG4gICAgICAud2hlbignL3ZpZXcyJywge1xuICAgICAgICAgIHRlbXBsYXRlVXJsOiAndmlldzIvdmlldzIuaHRtbCcsXG4gICAgICAgICAgY29udHJvbGxlcjogJ1ZpZXcyQ3RybCdcbiAgICAgIH0pXG4gICAgICAud2hlbignL2hucicsIHtcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2huci9obnIuaHRtbCcsXG4gICAgICAgICAgY29udHJvbGxlcjogJ0huckN0cmwnXG4gICAgICB9KVxuICAub3RoZXJ3aXNlKHtyZWRpcmVjdFRvOiAnL2hvbWUnfSk7XG59XSlcbiAgICAuY29udHJvbGxlcignQXBwQ3RybCcsIEFwcEN0cmwpO1xuQXBwQ3RybC4kaW5qZWN0ID0gWyckc2NvcGUnLCAnJHJvb3RTY29wZScsICckZG9jdW1lbnQnLCAnJHdpbmRvdyddO1xuZnVuY3Rpb24gQXBwQ3RybCgkc2NvcGUsICRyb290U2NvcGUsICRkb2N1bWVudCwgJHdpbmRvdykge1xuICB2YXIgdm09dGhpcztcbiAgICAkc2NvcGUubWVudUl0ZW1DbGFzcz0nbWVudS1pdGVtJztcbiAgICAkc2NvcGUubWVudUNsYXNzPSdtZW51JztcblxuICAgICRzY29wZS5vbk1lbnVQcmVzcyA9IGZ1bmN0aW9uIChtZW51Q2xpY2tlZCkge1xuICAgICAgICAkc2NvcGUubWVudUNsaWNrZWQ9IW1lbnVDbGlja2VkO1xuICAgICAgICAkc2NvcGUubWVzc2FnZT1cImluIG1ldGhvZFwiKyRzY29wZS5tZW51Q2xpY2tlZDtcbiAgICAgICAgJHNjb3BlLm1lbnVJdGVtQ2xhc3M9J21lbnUtaXRlbSc7XG5cbiAgICAgICAgaWYoJHNjb3BlLm1lbnVDbGlja2VkKXtcbiAgICAgICAgICAgICRzY29wZS5tZW51Q2xhc3M9ICdtZW51LW1vYmlsZSc7XG4gICAgICAgICAgICAkc2NvcGUubWVudUl0ZW1DbGFzcz0nbWVudS1pdGVtLW1vYmlsZSc7XG4gICAgICAgICAgICAkc2NvcGUubWVudUJ1dHRvbkNsYXNzPSdtZW51LWJ1dHRvbi1tb2JpbGUnO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICRzY29wZS5tZW51Q2xhc3M9ICdtZW51JztcbiAgICAgICAgICAgICRzY29wZS5tZW51QnV0dG9uQ2xhc3M9J21lbnUtYnV0dG9uJztcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnNvbGUubG9nKFwiaW4gbWVudSBwcmVzc1wiKTtcbiAgICAgICAgLy8gdmFyIGVsZW1lbnQgPSAkZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ1bC1tZW51XCIpO1xuICAgICAgICAvL1xuICAgICAgICAvLyAvL2VsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZShcIm1lbnUtd3JhcHBlci1tb2JpbGVcIik7XG4gICAgICAgIC8vIGlmIChlbGVtZW50LmNsYXNzTmFtZSA9PT0gXCJtZW51LW1vYmlsZVwiKSB7XG4gICAgICAgIC8vICAgICBlbGVtZW50LmNsYXNzTmFtZSArPSBcIm1lbnVcIjtcbiAgICAgICAgLy8gfVxuICAgICAgICAvLyBlbHNlIHtcbiAgICAgICAgLy8gICAgIGVsZW1lbnQuY2xhc3NOYW1lICs9IFwibWVudS1tb2JpbGVcIjtcbiAgICAgICAgLy8gfVxuICAgICAgICAvL2FsZXJ0KFwicHJlc3NcIik7XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJwcmVzc1wiICsgJGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2hvdy1tZW51XCIpLmNsYXNzTGlzdCk7XG4gICAgfTtcbn1cblxuIiwiXG4ndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdteUFwcC5ob21lJywgWyduZ1JvdXRlJ10pXG4gICAgLmNvbmZpZyhbJyRyb3V0ZVByb3ZpZGVyJywgZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKSB7XG4gICAgICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy9ob21lJywge1xuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdob21lL2hvbWUuaHRtbCcsXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnSG9tZUN0cmwnXG4gICAgICAgIH0pO1xuICAgIH1dKVxuICAgIC5jb250cm9sbGVyKCdIb21lQ3RybCcsSG9tZUN0cmwpO1xuSG9tZUN0cmwuJGluamVjdCA9IFsnJHNjb3BlJywgJyRyb290U2NvcGUnLCAnJGRvY3VtZW50JywgJyR3aW5kb3cnXTtcbmZ1bmN0aW9uIEhvbWVDdHJsKCRzY29wZSwgJHJvb3RTY29wZSwgJGRvY3VtZW50LCAkd2luZG93KSB7XG52YXIgdm0gPSB0aGlzO1xuICAgICRzY29wZS5kYXRhID0ge1xuICAgICAgICBcIm5hbWVcIjpcIlwiLFxuICAgICAgICBcImVtYWlsXCI6XCJcIixcbiAgICAgICAgXCJjaGVja2luXCI6XCJcIixcbiAgICAgICAgXCJjaGVja291dFwiOlwiXCIsXG4gICAgICAgIFwicm9vbVwiOltcIlNpbmdsZVwiLFwiRG91YmxlXCIsXCJGYW1pbHlcIixcIlN1aXRlXCJdLFxuICAgICAgICBcImFkdWx0c1wiOlsxLDIsMyw0XSxcbiAgICAgICAgXCJraWRzXCI6WzEsMiwzLDRdLFxuICAgIH07XG4kc2NvcGUuYm9va05vdyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcImluIGJvb2sgbm93XCIpO1xuICAgIH1cbiAgICB9XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdteUFwcC5obnInLCBbJ25nUm91dGUnXSlcblxuLmNvbmZpZyhbJyRyb3V0ZVByb3ZpZGVyJywgZnVuY3Rpb24oJHJvdXRlUHJvdmlkZXIpIHtcbiAgJHJvdXRlUHJvdmlkZXIud2hlbignL2hucicsIHtcbiAgICB0ZW1wbGF0ZVVybDogJ2huci9obnIuaHRtbCcsXG4gICAgY29udHJvbGxlcjogJ0huckN0cmwnXG4gIH0pO1xufV0pXG5cbi5jb250cm9sbGVyKCdIbnJDdHJsJywgSG5yQ3RybCk7XG5IbnJDdHJsLiRpbmplY3QgPSBbJyRzY29wZScsICckcm9vdFNjb3BlJywgJyRkb2N1bWVudCcsICckd2luZG93J107XG4gICBmdW5jdGlvbiBIbnJDdHJsKCRzY29wZSwkcm9vdFNjb3BlLCAkZG9jdW1lbnQsICR3aW5kb3cpIHtcbiRzY29wZS5kb1NvbWV0aGluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zb2xlLmxvZyhcImluIHNvbWV0aGluZ1wiKTtcblxufVxuXG59IiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnbXlBcHAudmlldzInLCBbJ25nUm91dGUnXSlcblxuLmNvbmZpZyhbJyRyb3V0ZVByb3ZpZGVyJywgZnVuY3Rpb24oJHJvdXRlUHJvdmlkZXIpIHtcbiAgJHJvdXRlUHJvdmlkZXIud2hlbignL3ZpZXcyJywge1xuICAgIHRlbXBsYXRlVXJsOiAndmlldzIvaG5yLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6ICdWaWV3MkN0cmwnXG4gIH0pO1xufV0pXG5cbi5jb250cm9sbGVyKCdWaWV3MkN0cmwnLCBWaWV3MkN0cmwpO1xuICAgIHZhciBWaWV3MkN0cmwgPSBmdW5jdGlvbigpIHtcblxufTsiXX0=
